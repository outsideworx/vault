services:
  grafana:
    container_name: grafana
    environment:
      GF_SERVER_PROTOCOL: https
      GF_SECURITY_ADMIN_USER: $GF_SECURITY_ADMIN_USER
      GF_SECURITY_ADMIN_PASSWORD: $GF_SECURITY_ADMIN_PASSWORD
      GF_SERVER_CERT_FILE: $SERVER_SSL_CERTIFICATE
      GF_SERVER_CERT_KEY: $SERVER_SSL_CERTIFICATE_PRIVATE_KEY
    image: grafana/grafana:12.2.0
    ports:
      - "3000:3000"
    restart: unless-stopped
    user: root
    volumes:
      - ${SERVER_SSL_CERTIFICATE}:${SERVER_SSL_CERTIFICATE}:ro
      - ${SERVER_SSL_CERTIFICATE_PRIVATE_KEY}:${SERVER_SSL_CERTIFICATE_PRIVATE_KEY}:ro
      - /home/outsideworx/grafana:/var/lib/grafana
  loki:
    container_name: loki
    image: grafana/loki:3.5.5
  postgres:
    container_name: postgres
    environment:
      POSTGRES_USER: $SPRING_DATASOURCE_USERNAME
      POSTGRES_PASSWORD: $SPRING_DATASOURCE_PASSWORD
    image: postgres:16.2
    restart: unless-stopped
    volumes:
      - /home/outsideworx/data:/var/lib/postgresql/data
  prometheus:
    container_name: prometheus
    depends_on:
      - vault
    image: prom/prometheus:v3.6.0
    restart: unless-stopped
    user: root
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - /home/outsideworx/prometheus:/prometheus
  vault:
    build: .
    container_name: vault
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - "443:443"
    restart: on-failure:4
    volumes:
      - ${SERVER_SSL_CERTIFICATE}:${SERVER_SSL_CERTIFICATE}:ro
      - ${SERVER_SSL_CERTIFICATE_PRIVATE_KEY}:${SERVER_SSL_CERTIFICATE_PRIVATE_KEY}:ro